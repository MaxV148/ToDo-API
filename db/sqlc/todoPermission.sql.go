// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: todoPermission.sql

package db

import (
	"context"
)

const grantUserToToDo = `-- name: GrantUserToToDo :one
INSERT INTO todo_permissions (user_id, todo_id)
VALUES ($1, $1)
RETURNING user_id, todo_id
`

func (q *Queries) GrantUserToToDo(ctx context.Context, userID int64) (TodoPermission, error) {
	row := q.db.QueryRowContext(ctx, grantUserToToDo, userID)
	var i TodoPermission
	err := row.Scan(&i.UserID, &i.TodoID)
	return i, err
}

const removeUserFromToDo = `-- name: RemoveUserFromToDo :exec
DELETE
FROM todo_permissions
WHERE user_id = $1
  AND todo_id = $2
`

type RemoveUserFromToDoParams struct {
	UserID int64
	TodoID int64
}

func (q *Queries) RemoveUserFromToDo(ctx context.Context, arg RemoveUserFromToDoParams) error {
	_, err := q.db.ExecContext(ctx, removeUserFromToDo, arg.UserID, arg.TodoID)
	return err
}
